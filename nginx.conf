# auto detects a good number of processes to run
worker_processes auto;
#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}
http {
    server_tokens off;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Cache-Control "no-cache, public, must-revalidate, proxy-revalidate";
    # add_header Content-Security-Policy "default-src 'self' blob: https://apimgmecpdev.azure-api.net; script-src 'self' 'unsafe-eval' blob: https://www.gstatic.com/charts; script-src-elem 'self' https://www.gstatic.com/charts/loader.js https://www.gstatic.com/charts/48.1/loader.js https://www.gstatic.com/charts/48.1/js/jsapi_compiled_format_module.js https://www.gstatic.com/charts/48.1/js/jsapi_compiled_default_module.js https://www.gstatic.com/charts/48.1/js/jsapi_compiled_ui_module.js https://www.gstatic.com/charts/48.1/js/jsapi_compiled_corechart_module.js https://www.gstatic.com/charts/48.1/js/jsapi_compiled_controls_module.js; img-src 'self' data:; style-src 'self' 'unsafe-inline' https://www.gstatic.com/charts; style-src-elem 'self' 'unsafe-inline' https://www.gstatic.com/charts/48.1/css/core/tooltip.css https://www.gstatic.com/charts/48.1/css/util/util.css https://www.gstatic.com/charts/48.1/css/controls/controls.css; font-src 'self' https://fonts.gstatic.com; object-src 'none';";
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;
    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';
    server {
        # listen on port 80
        listen 80;
        # save logs here
        access_log /var/log/nginx/access.log compression;
        # where the root here
        root /var/www;
        # what file to server as index
        index index.html index.htm;
        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
            # To allow POST on static pages
            error_page 405 =200 $uri;
        }
        # To allow POST on static pages
        error_page 405 =200 $uri;
        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }
        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }
        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}